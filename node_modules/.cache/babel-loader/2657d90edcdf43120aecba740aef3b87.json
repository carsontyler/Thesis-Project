{"ast":null,"code":"// import React, { Fragment, useEffect, useState } from \"react\"\n// import { View, Button } from \"react-native\"\n// import {Card, CardHeader, CardTitle, CardBody, Col, CardImg, Row} from \"reactstrap\"\n// import { RecipeComp } from \"./RecipeComp\";\n// import _ from 'lodash'\n// import \"./homepage.css\"\n// const breakfast_recipes = require('./../../data/breakfast_recipes.json')\n// const dessert_recipes = require('./../../data/dessert_recipes.json')\n// const dinner_recipes = require('./../../data/dinner_recipes.json')\n// const gluten_free_recipes = require('./../../data/gluten_free_recipes.json')\n// const side_recipes = require('./../../data/side_recipes.json') \n// interface HomePagecompProps {\n//     selectRecipeClick: any;\n// }\n// export const HomePageComp: React.FC<HomePagecompProps> = (props) => {\n//   //const ingredients = props.recipe ? props.recipe.ingredients.substr(2, props.recipe.ingredients.length - 4).split(\"', '\") : null;\n//   //const directions = props.recipe ? props.recipe.directions.substr(2, props.recipe.directions.length - 4).split(\"', '\") : null;\n//   interface Recipe {\n//     id: number,\n//     type: string, \n//     recipe: string,\n//     title: string,\n//     most_similar: [number],\n//     ratings: number,\n//     stars: number,\n//     image: string,\n//     ingredients: [string],\n//     directions: [string],\n//   }\n//   const varToString = (varObj: {}) => Object.keys(varObj)[0]\n//   const [allRecipes, setRecipes] = useState<Recipe[]>();\n//   const [mainRecipes, setMainRecipes] = useState<Recipe[]>();\n//   let [currentRecipe, setCurrentRecipe] = useState<Recipe>();\n//   let [groupId, setGroupRecipe] = useState(\"\");\n//   let [index, setIndex] = useState(0);\n//   const handleClick = (rcp: any) => {\n//     setCurrentRecipe(rcp);\n//   }\n//   useEffect(() => {\n//     setRecipes(dinner_recipes);\n//     let mainRecipes = _.filter(dinner_recipes, (recipe: Recipe) => {\n//         return recipe.type === \"main\";\n//     });\n//     setGroupRecipe(varToString(dinner_recipes));\n//     setMainRecipes(mainRecipes);\n//     setCurrentRecipe(mainRecipes[0]);\n//   }, []);\n//   return currentRecipe ? (    \n//     <Fragment>\n//       <View style={{flex: 1, flexDirection: 'row'}}>\n//         <View style={{flex: 1, flexDirection: 'column'}}>\n//           <Card className=\"card-chart\">\n//             <CardHeader>\n//               <CardTitle tag=\"h3\">\n//                 <i className=\"tim-icons icon-bell-55 text-info\" />{\" \"}\n//                 Recipe Recommender\n//               </CardTitle>\n//             </CardHeader>\n//             <CardBody>{mainRecipes ? (\n//               <div>\n//                 <div id=\"recipe1\" onClick={() => handleClick(mainRecipes[0])}>\n//                   <span>1. { mainRecipes[0].title }</span>\n//                 </div>\n//                 <div id=\"recipe2\" onClick={() => handleClick(mainRecipes[1])}>\n//                   <span>2. { mainRecipes[1].title }</span>\n//                 </div>\n//                 <div id=\"recipe3\" onClick={() => handleClick(mainRecipes[2])}>\n//                   <span>3. { mainRecipes[2].title }</span>\n//                 </div>\n//                 <div id=\"recipe4\" onClick={() => handleClick(mainRecipes[3])}>\n//                   <span>4. { mainRecipes[3].title }</span>\n//                 </div>\n//                 <div id=\"recipe5\" onClick={() => handleClick(mainRecipes[4])}>\n//                   <span>5. { mainRecipes[4].title }</span>\n//                 </div>\n//               </div>\n//               )\n//               : (<div>No Recipes Found</div>)}\n//             </CardBody>\n//           </Card>\n//           <Button onPress={props.selectRecipeClick} title=\"Select Recipe\" color=\"#4ECCA3\" /> \n//         </View>  \n//         <View style={{flex: 1, flexDirection: 'column'}}>\n//           <RecipeComp recipe={currentRecipe} />\n//         </View>\n//       </View>\n//     </Fragment>\n//   ) : (<div></div>);   \n// }","map":{"version":3,"sources":["C:/inetpub/wwwroot/Thesis-Project/src/components/HomePageComp.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { Fragment, useEffect, useState } from \"react\"\r\n// import { View, Button } from \"react-native\"\r\n// import {Card, CardHeader, CardTitle, CardBody, Col, CardImg, Row} from \"reactstrap\"\r\n// import { RecipeComp } from \"./RecipeComp\";\r\n// import _ from 'lodash'\r\n// import \"./homepage.css\"\r\n\r\n// const breakfast_recipes = require('./../../data/breakfast_recipes.json')\r\n// const dessert_recipes = require('./../../data/dessert_recipes.json')\r\n// const dinner_recipes = require('./../../data/dinner_recipes.json')\r\n// const gluten_free_recipes = require('./../../data/gluten_free_recipes.json')\r\n// const side_recipes = require('./../../data/side_recipes.json') \r\n\r\n// interface HomePagecompProps {\r\n//     selectRecipeClick: any;\r\n// }\r\n\r\n// export const HomePageComp: React.FC<HomePagecompProps> = (props) => {\r\n//   //const ingredients = props.recipe ? props.recipe.ingredients.substr(2, props.recipe.ingredients.length - 4).split(\"', '\") : null;\r\n//   //const directions = props.recipe ? props.recipe.directions.substr(2, props.recipe.directions.length - 4).split(\"', '\") : null;\r\n    \r\n//   interface Recipe {\r\n//     id: number,\r\n//     type: string, \r\n//     recipe: string,\r\n//     title: string,\r\n//     most_similar: [number],\r\n//     ratings: number,\r\n//     stars: number,\r\n//     image: string,\r\n//     ingredients: [string],\r\n//     directions: [string],\r\n//   }\r\n\r\n//   const varToString = (varObj: {}) => Object.keys(varObj)[0]\r\n//   const [allRecipes, setRecipes] = useState<Recipe[]>();\r\n//   const [mainRecipes, setMainRecipes] = useState<Recipe[]>();\r\n//   let [currentRecipe, setCurrentRecipe] = useState<Recipe>();\r\n//   let [groupId, setGroupRecipe] = useState(\"\");\r\n//   let [index, setIndex] = useState(0);\r\n  \r\n//   const handleClick = (rcp: any) => {\r\n//     setCurrentRecipe(rcp);\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     setRecipes(dinner_recipes);\r\n//     let mainRecipes = _.filter(dinner_recipes, (recipe: Recipe) => {\r\n//         return recipe.type === \"main\";\r\n//     });\r\n//     setGroupRecipe(varToString(dinner_recipes));\r\n//     setMainRecipes(mainRecipes);\r\n//     setCurrentRecipe(mainRecipes[0]);\r\n//   }, []);\r\n  \r\n//   return currentRecipe ? (    \r\n//     <Fragment>\r\n//       <View style={{flex: 1, flexDirection: 'row'}}>\r\n//         <View style={{flex: 1, flexDirection: 'column'}}>\r\n//           <Card className=\"card-chart\">\r\n//             <CardHeader>\r\n//               <CardTitle tag=\"h3\">\r\n//                 <i className=\"tim-icons icon-bell-55 text-info\" />{\" \"}\r\n//                 Recipe Recommender\r\n//               </CardTitle>\r\n//             </CardHeader>\r\n//             <CardBody>{mainRecipes ? (\r\n//               <div>\r\n//                 <div id=\"recipe1\" onClick={() => handleClick(mainRecipes[0])}>\r\n//                   <span>1. { mainRecipes[0].title }</span>\r\n//                 </div>\r\n//                 <div id=\"recipe2\" onClick={() => handleClick(mainRecipes[1])}>\r\n//                   <span>2. { mainRecipes[1].title }</span>\r\n//                 </div>\r\n//                 <div id=\"recipe3\" onClick={() => handleClick(mainRecipes[2])}>\r\n//                   <span>3. { mainRecipes[2].title }</span>\r\n//                 </div>\r\n//                 <div id=\"recipe4\" onClick={() => handleClick(mainRecipes[3])}>\r\n//                   <span>4. { mainRecipes[3].title }</span>\r\n//                 </div>\r\n//                 <div id=\"recipe5\" onClick={() => handleClick(mainRecipes[4])}>\r\n//                   <span>5. { mainRecipes[4].title }</span>\r\n//                 </div>\r\n//               </div>\r\n//               )\r\n//               : (<div>No Recipes Found</div>)}\r\n//             </CardBody>\r\n//           </Card>\r\n//           <Button onPress={props.selectRecipeClick} title=\"Select Recipe\" color=\"#4ECCA3\" /> \r\n//         </View>  \r\n//         <View style={{flex: 1, flexDirection: 'column'}}>\r\n//           <RecipeComp recipe={currentRecipe} />\r\n//         </View>\r\n//       </View>\r\n//     </Fragment>\r\n//   ) : (<div></div>);   \r\n// }"]},"metadata":{},"sourceType":"module"}