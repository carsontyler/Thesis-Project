{"ast":null,"code":"var _jsxFileName = \"C:\\\\inetpub\\\\wwwroot\\\\ThesisProject\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst fs = require('fs');\n\nconst papa = require('papaparse');\n\nconst file = fs.createReadStream('data/dinner_recipes.csv');\nvar count = 0; // cache the running count\n\npapa.parse(file, {\n  worker: true,\n  // Don't bog down the main thread if its a big file\n  step: function step(result) {// do stuff with result\n  },\n  complete: function complete(results, file) {\n    console.log('parsing complete read', count, 'records.');\n  }\n}); //id,type,recipe,title,most_similar,ratings,stars,image,ingredients,directions\n\nclass Recipe {\n  set Id(Id) {\n    this._Id = Id;\n  }\n\n  set Type(Type) {\n    this._Type = Type;\n  }\n\n  set Recipe(Recipe) {\n    this._Recipe = Recipe;\n  }\n\n  set Title(Title) {\n    this._Title = Title;\n  }\n\n  set Most_Similar(Most_Similar) {\n    this._Most_Similar = Most_Similar;\n  }\n\n  set Ratings(Ratings) {\n    this._Ratings = Ratings;\n  }\n\n  set Stars(Stars) {\n    this._Stars = Stars;\n  }\n\n  set Image(Image) {\n    this._Image = Image;\n  }\n\n  set Ingredients(Ingredients) {\n    this._Ingredients = Ingredients;\n  }\n\n  set Directions(Directions) {\n    this._Directions = Directions;\n  }\n\n  get Id() {\n    return this._Id;\n  }\n\n  get Type() {\n    return this._Type;\n  }\n\n  get Recipe() {\n    return this._Recipe;\n  }\n\n  get Title() {\n    return this._Title;\n  }\n\n  get Most_Similar() {\n    return this._Most_Similar;\n  }\n\n  get Ratings() {\n    return this._Ratings;\n  }\n\n  get Stars() {\n    return this._Stars;\n  }\n\n  get Image() {\n    return this._Image;\n  }\n\n  get Ingredients() {\n    return this._Ingredients;\n  }\n\n  get Directions() {\n    return this._Directions;\n  }\n\n} // var data = csv.toObjects(csv);\n\n\nlet dinner_recipes = [];\nlet filePath = \"data/dinner_recipes.csv\";\nfs.createReadStream('data.csv').pipe(csv()).on('data', row => {\n  console.log(row);\n}).on('end', () => {\n  console.log('CSV file successfully processed');\n}); // function fetchJSONFile(path, callback) {\n//   var httpRequest = new XMLHttpRequest();\n//   httpRequest.onreadystatechange = function() {\n//       if (httpRequest.readyState === 4) {\n//           if (httpRequest.status === 200) {\n//               console.log(httpRequest.responseText);\n//               var data = JSON.parse(httpRequest.responseText);\n//               if (callback) callback(data);\n//           }\n//       }\n//   };\n//   httpRequest.open('GET', path);\n//   httpRequest.send(); \n// }\n// this requests the file and executes a callback with the parsed result once\n//   it is available\n// fetchJSONFile('pathToFile.json', function(data){\n//   // do something with your data\n//   dinner_recipes = data;\n//   console.log(data);\n// });\n\nclass DinnerRecipes extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recipe1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, \"1. \", dinner_recipes[0])), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recipe2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"2. dinner_recipes[1]\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recipe3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, \"3. dinner_recipes[2]\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recipe4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"4. dinner_recipes[3]\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recipe5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, \"5. dinner_recipes[4]\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recipe6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, \"6. dinner_recipes[5]\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recipe7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"7. dinner_recipes[6]\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recipe8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \"8. dinner_recipes[7]\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recipe9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, \"9. dinner_recipes[8]\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recipe10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"10. dinner_recipes[9]\")));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(DinnerRecipes, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/inetpub/wwwroot/ThesisProject/src/index.js"],"names":["React","ReactDOM","fs","require","papa","file","createReadStream","count","parse","worker","step","result","complete","results","console","log","Recipe","Id","_Id","Type","_Type","_Recipe","Title","_Title","Most_Similar","_Most_Similar","Ratings","_Ratings","Stars","_Stars","Image","_Image","Ingredients","_Ingredients","Directions","_Directions","dinner_recipes","filePath","pipe","csv","on","row","DinnerRecipes","Component","render","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nconst fs = require('fs');\r\nconst papa = require('papaparse');\r\n\r\nconst file = fs.createReadStream('data/dinner_recipes.csv');\r\nvar count = 0; // cache the running count\r\npapa.parse(file, {\r\n    worker: true, // Don't bog down the main thread if its a big file\r\n    step: function(result) {\r\n        // do stuff with result\r\n    },\r\n    complete: function(results, file) {\r\n        console.log('parsing complete read', count, 'records.'); \r\n    }\r\n});\r\n\r\n//id,type,recipe,title,most_similar,ratings,stars,image,ingredients,directions\r\nclass Recipe {\r\n  set Id(Id){\r\n      this._Id=Id;\r\n  }\r\n  set Type(Type){\r\n      this._Type=Type;\r\n  }\r\n  set Recipe(Recipe){\r\n    this._Recipe=Recipe;\r\n  }\r\n  set Title(Title){\r\n      this._Title=Title;\r\n  }\r\n  set Most_Similar(Most_Similar){\r\n    this._Most_Similar=Most_Similar;\r\n  }\r\n  set Ratings(Ratings){\r\n    this._Ratings=Ratings;\r\n  }\r\n  set Stars(Stars){\r\n    this._Stars=Stars;\r\n  }\r\n  set Image(Image){\r\n    this._Image=Image;\r\n  }\r\n  set Ingredients(Ingredients){\r\n    this._Ingredients=Ingredients;\r\n  }\r\n  set Directions(Directions){\r\n    this._Directions=Directions;\r\n  }\r\n\r\n  get Id(){\r\n      return this._Id;\r\n  }\r\n  get Type(){\r\n      return this._Type;\r\n  }\r\n  get Recipe(){\r\n    return this._Recipe;\r\n  }\r\n  get Title(){\r\n      return this._Title;\r\n  }\r\n  get Most_Similar(){\r\n    return this._Most_Similar;\r\n  }\r\n  get Ratings(){\r\n    return this._Ratings;\r\n  }\r\n  get Stars(){\r\n    return this._Stars;\r\n  }\r\n  get Image(){\r\n    return this._Image;\r\n  }\r\n  get Ingredients(){\r\n    return this._Ingredients;\r\n  }\r\n  get Directions(){\r\n    return this._Directions;\r\n  }\r\n}\r\n\r\n// var data = csv.toObjects(csv);\r\n\r\nlet dinner_recipes = [];\r\nlet filePath = \"data/dinner_recipes.csv\"\r\n\r\nfs.createReadStream('data.csv')\r\n  .pipe(csv())\r\n  .on('data', (row) => {\r\n    console.log(row);\r\n  })\r\n  .on('end', () => {\r\n    console.log('CSV file successfully processed');\r\n  });\r\n\r\n\r\n// function fetchJSONFile(path, callback) {\r\n//   var httpRequest = new XMLHttpRequest();\r\n//   httpRequest.onreadystatechange = function() {\r\n//       if (httpRequest.readyState === 4) {\r\n//           if (httpRequest.status === 200) {\r\n//               console.log(httpRequest.responseText);\r\n//               var data = JSON.parse(httpRequest.responseText);\r\n//               if (callback) callback(data);\r\n//           }\r\n//       }\r\n//   };\r\n//   httpRequest.open('GET', path);\r\n//   httpRequest.send(); \r\n// }\r\n\r\n// this requests the file and executes a callback with the parsed result once\r\n//   it is available\r\n// fetchJSONFile('pathToFile.json', function(data){\r\n//   // do something with your data\r\n//   dinner_recipes = data;\r\n//   console.log(data);\r\n// });\r\n\r\nclass DinnerRecipes extends React.Component {\r\n  render() {\r\n    return (    \r\n      <div>\r\n        <div id=\"recipe1\">\r\n          <span>1. {dinner_recipes[0]}</span>\r\n        </div>\r\n        <div id=\"recipe2\">\r\n          <span>2. dinner_recipes[1]</span>\r\n        </div>\r\n        <div id=\"recipe3\">\r\n          <span>3. dinner_recipes[2]</span>\r\n        </div>\r\n        <div id=\"recipe4\">\r\n          <span>4. dinner_recipes[3]</span>\r\n        </div>\r\n        <div id=\"recipe5\">\r\n          <span>5. dinner_recipes[4]</span>\r\n        </div>\r\n        <div id=\"recipe6\">\r\n          <span>6. dinner_recipes[5]</span>\r\n        </div>\r\n        <div id=\"recipe7\">\r\n          <span>7. dinner_recipes[6]</span>\r\n        </div>\r\n        <div id=\"recipe8\">\r\n          <span>8. dinner_recipes[7]</span>\r\n        </div>\r\n        <div id=\"recipe9\">\r\n          <span>9. dinner_recipes[8]</span>\r\n        </div>\r\n        <div id=\"recipe10\">\r\n          <span>10. dinner_recipes[9]</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<DinnerRecipes />, rootElement);\r\n"]},"metadata":{},"sourceType":"module"}