{"ast":null,"code":"import _slicedToArray from \"C:\\\\inetpub\\\\wwwroot\\\\ThesisProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\inetpub\\\\wwwroot\\\\ThesisProject\\\\src\\\\views\\\\HomePage\\\\HomePage.tsx\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport _ from 'lodash'; // import { HomePageComp } from \"../../components/HomePageComp\"\n\nimport { View, Button } from \"react-native\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport { RecipeComp } from \"./../../components/RecipeComp\";\nimport { SurveyComp } from \"../../components/SurveyComp\";\nimport \"./homepage.css\";\n\nconst breakfast_recipes = require('./../../data/breakfast_recipes.json');\n\nconst dessert_recipes = require('./../../data/dessert_recipes.json');\n\nconst dinner_recipes = require('./../../data/dinner_recipes.json');\n\nconst gluten_free_recipes = require('./../../data/gluten_free_recipes.json');\n\nconst side_recipes = require('./../../data/side_recipes.json');\n\nexport const HomePage = () => {\n  const varToString = varObj => Object.keys(varObj)[0];\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        allRecipes = _useState2[0],\n        setRecipes = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mainRecipes = _useState4[0],\n        setMainRecipes = _useState4[1];\n\n  let _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentRecipe = _useState6[0],\n      setCurrentRecipe = _useState6[1];\n\n  let _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      groupId = _useState8[0],\n      setGroupId = _useState8[1];\n\n  let _useState9 = useState(-1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      index = _useState10[0],\n      setIndex = _useState10[1];\n\n  let _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      directionsAccepted = _useState12[0],\n      setDirectionsAccepted = _useState12[1];\n\n  const handleClick = rcp => {\n    setCurrentRecipe(rcp);\n  };\n\n  const handleSubmit = event => {\n    setIndex(0);\n  };\n\n  const selectRecipeClick = () => {\n    let temp = ++index;\n\n    if (temp > 1) {\n      temp = 0;\n      setGroupId(++groupId);\n    }\n\n    setIndex(temp);\n  };\n\n  const directionsCheckboxChange = event => {\n    setDirectionsAccepted(event.target.checked);\n  };\n\n  const refresh = () => {\n    let recipes = [];\n    if (groupId === 0) recipes = breakfast_recipes;else if (groupId === 1) recipes = dessert_recipes;else if (groupId === 2) recipes = dinner_recipes;else if (groupId === 3) recipes = gluten_free_recipes;else if (groupId === 4) recipes = side_recipes;\n    setRecipes(recipes);\n\n    let mainRecipes = _.filter(dinner_recipes, recipe => {\n      return recipe.type === \"main\";\n    });\n\n    setMainRecipes(mainRecipes);\n    setCurrentRecipe(mainRecipes[0]);\n  };\n\n  useEffect(() => {\n    refresh();\n  }, []);\n  useEffect(() => {\n    refresh();\n  }, [index]);\n  useEffect(() => {\n    refresh();\n  }, [directionsAccepted]);\n  return index === -1 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    tag: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"tim-icons icon-bell-55 text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), \" \", \"Directions and Disclosure\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Thank you for participating in Carson's Thesis Project Experiment!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Directions\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"In this experiment, you will be selecting recipes based on a given scenario and then rating recommendations based on your selection. You can select recipes by clicking on them.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), \"Five (5) scenarios will be presented. You should select the recipe you think is the best. There is no right answer, simply pick the one you think looks the best, would be the most delicious, is the easiest to cook - whatever.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), \"Upon selecting a recipe, you will be presented with ten (10) recommended recipes. You can cycle through the recipes by clicking on them.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), \"You will then fill out a survey related to the recommended recipes and the recommendation system as a whole. You will rate these from 1-5 by clicking on the stars.\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"directionsCheckbox\",\n    type: \"checkbox\",\n    onChange: directionsCheckboxChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), \"I understand these directions and accept the terms and conditions.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    disabled: !directionsAccepted,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  })))))) : currentRecipe ? index === 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    tag: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"tim-icons icon-bell-55 text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }), \" \", \"Recipe Recommender\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, mainRecipes ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recipe1\",\n    onClick: () => handleClick(mainRecipes[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, \"1. \", mainRecipes[0].title)), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recipe2\",\n    onClick: () => handleClick(mainRecipes[1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, \"2. \", mainRecipes[1].title)), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recipe3\",\n    onClick: () => handleClick(mainRecipes[2]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, \"3. \", mainRecipes[2].title)), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recipe4\",\n    onClick: () => handleClick(mainRecipes[3]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, \"4. \", mainRecipes[3].title)), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recipe5\",\n    onClick: () => handleClick(mainRecipes[4]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, \"5. \", mainRecipes[4].title))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 18\n    }\n  }, \"No Recipes Found\"))), /*#__PURE__*/React.createElement(Button, {\n    onPress: selectRecipeClick,\n    title: \"Select Recipe\",\n    color: \"#4ECCA3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RecipeComp, {\n    recipe: currentRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  })))) : index === 1 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RecipeComp, {\n    recipe: currentRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SurveyComp, {\n    submitSurvey: selectRecipeClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  })))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 35\n    }\n  });\n};\nexport default HomePage;","map":{"version":3,"sources":["C:/inetpub/wwwroot/ThesisProject/src/views/HomePage/HomePage.tsx"],"names":["React","Fragment","useEffect","useState","_","View","Button","Card","CardHeader","CardTitle","CardBody","RecipeComp","SurveyComp","breakfast_recipes","require","dessert_recipes","dinner_recipes","gluten_free_recipes","side_recipes","HomePage","varToString","varObj","Object","keys","allRecipes","setRecipes","mainRecipes","setMainRecipes","currentRecipe","setCurrentRecipe","groupId","setGroupId","index","setIndex","directionsAccepted","setDirectionsAccepted","handleClick","rcp","handleSubmit","event","selectRecipeClick","temp","directionsCheckboxChange","target","checked","refresh","recipes","filter","recipe","type","flex","flexDirection","title"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"\r\nimport _ from 'lodash'\r\n// import { HomePageComp } from \"../../components/HomePageComp\"\r\nimport { View, Button } from \"react-native\"\r\nimport {Card, CardHeader, CardTitle, CardBody, Col, CardImg, Row} from \"reactstrap\"\r\nimport { RecipeComp } from \"./../../components/RecipeComp\";\r\nimport { RecipeRaterComp } from \"./../../components/RecipeRaterComp\"\r\nimport { SurveyComp } from \"../../components/SurveyComp\"\r\nimport \"./homepage.css\"\r\n\r\nexport interface Recipe {\r\n  id: number,\r\n  type: string, \r\n  recipe: string,\r\n  title: string,\r\n  most_similar: [number],\r\n  ratings: number,\r\n  stars: number,\r\n  image: string,\r\n  ingredients: [string],\r\n  directions: [string],\r\n}\r\n\r\nconst breakfast_recipes = require('./../../data/breakfast_recipes.json')\r\nconst dessert_recipes = require('./../../data/dessert_recipes.json')\r\nconst dinner_recipes = require('./../../data/dinner_recipes.json')\r\nconst gluten_free_recipes = require('./../../data/gluten_free_recipes.json')\r\nconst side_recipes = require('./../../data/side_recipes.json') \r\n\r\nexport const HomePage: React.FC = () => {  \r\n  \r\n  const varToString = (varObj: {}) => Object.keys(varObj)[0]\r\n  const [allRecipes, setRecipes] = useState<Recipe[]>();\r\n  const [mainRecipes, setMainRecipes] = useState<Recipe[]>();\r\n  let [currentRecipe, setCurrentRecipe] = useState<Recipe>();\r\n  let [groupId, setGroupId] = useState(0);\r\n  let [index, setIndex] = useState(-1);\r\n  let [directionsAccepted, setDirectionsAccepted] = useState(false);\r\n    \r\n  interface Recipe {\r\n    id: number,\r\n    type: string, \r\n    recipe: string,\r\n    title: string,\r\n    most_similar: [number],\r\n    ratings: number,\r\n    stars: number,\r\n    image: string,\r\n    ingredients: [string],\r\n    directions: [string],\r\n  }\r\n  \r\n  const handleClick = (rcp: any) => {\r\n    setCurrentRecipe(rcp);\r\n  }\r\n\r\n  const handleSubmit = (event: any) => {\r\n    setIndex(0);\r\n  }\r\n \r\n  const selectRecipeClick = () => {\r\n    let temp = ++index;\r\n    if (temp > 1){\r\n      temp = 0;\r\n      setGroupId(++groupId);\r\n    }\r\n    setIndex(temp);\r\n  }\r\n\r\n  const directionsCheckboxChange = (event : any) => {\r\n    setDirectionsAccepted(event.target.checked);\r\n  }\r\n\r\n  const refresh = () => {\r\n    let recipes:Recipe[] = [];\r\n\r\n    if (groupId === 0)\r\n      recipes = breakfast_recipes;\r\n    else if (groupId === 1)\r\n      recipes = dessert_recipes;\r\n    else if (groupId === 2)\r\n      recipes = dinner_recipes;\r\n    else if (groupId === 3)\r\n      recipes = gluten_free_recipes;\r\n    else if (groupId === 4)\r\n      recipes = side_recipes;\r\n\r\n    setRecipes(recipes);\r\n\r\n    let mainRecipes = _.filter(dinner_recipes, (recipe: Recipe) => {\r\n        return recipe.type === \"main\";\r\n    });\r\n    setMainRecipes(mainRecipes);\r\n    setCurrentRecipe(mainRecipes[0]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    refresh();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    refresh();\r\n  }, [index])\r\n\r\n  useEffect(() => {\r\n    refresh();\r\n  }, [directionsAccepted])\r\n  \r\n  return index === -1 ? (\r\n    <Fragment>\r\n      <View style={{flex: 1, flexDirection: 'row'}}>\r\n        <Card className=\"card-chart\">\r\n          <CardHeader>\r\n            <CardTitle tag=\"h3\">\r\n                <i className=\"tim-icons icon-bell-55 text-info\" />{\" \"}\r\n                Directions and Disclosure\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Thank you for participating in Carson's Thesis Project Experiment! \r\n            </p>\r\n            <h3>Directions</h3>\r\n            <p>\r\n              In this experiment, you will be selecting recipes based on a given scenario and then rating recommendations based on your selection. You can select recipes by clicking on them.\r\n            <br/>\r\n              Five (5) scenarios will be presented. You should select the recipe you think is the best. There is no right answer, simply pick the one you think looks the best, would be the most delicious, is the easiest to cook - whatever. \r\n            <br/>\r\n              Upon selecting a recipe, you will be presented with ten (10) recommended recipes. You can cycle through the recipes by clicking on them. \r\n            <br/>\r\n              You will then fill out a survey related to the recommended recipes and the recommendation system as a whole. You will rate these from 1-5 by clicking on the stars. \r\n            </p>\r\n            <form>\r\n              <label>\r\n                <input \r\n                  name=\"directionsCheckbox\"\r\n                  type=\"checkbox\"\r\n                  onChange={directionsCheckboxChange}/>\r\n                  I understand these directions and accept the terms and conditions.\r\n                  <br/>\r\n              </label>\r\n              <input type=\"submit\" value=\"Submit\" disabled={!directionsAccepted} onClick={handleSubmit}/>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </View>\r\n    </Fragment>\r\n   ) :\r\n  currentRecipe ? (index === 0 ? (    \r\n    <Fragment>\r\n      <View style={{flex: 1, flexDirection: 'row'}}>\r\n        <View style={{flex: 1, flexDirection: 'column'}}>\r\n          <Card className=\"card-chart\">\r\n            <CardHeader>\r\n              <CardTitle tag=\"h3\">\r\n                <i className=\"tim-icons icon-bell-55 text-info\" />{\" \"}\r\n                Recipe Recommender\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardBody>{mainRecipes ? (\r\n              <div>\r\n                <div id=\"recipe1\" onClick={() => handleClick(mainRecipes[0])}>\r\n                  <span>1. { mainRecipes[0].title }</span>\r\n                </div>\r\n                <div id=\"recipe2\" onClick={() => handleClick(mainRecipes[1])}>\r\n                  <span>2. { mainRecipes[1].title }</span>\r\n                </div>\r\n                <div id=\"recipe3\" onClick={() => handleClick(mainRecipes[2])}>\r\n                  <span>3. { mainRecipes[2].title }</span>\r\n                </div>\r\n                <div id=\"recipe4\" onClick={() => handleClick(mainRecipes[3])}>\r\n                  <span>4. { mainRecipes[3].title }</span>\r\n                </div>\r\n                <div id=\"recipe5\" onClick={() => handleClick(mainRecipes[4])}>\r\n                  <span>5. { mainRecipes[4].title }</span>\r\n                </div>\r\n              </div>\r\n              )\r\n              : (<div>No Recipes Found</div>)}\r\n            </CardBody>\r\n          </Card>\r\n          <Button onPress={selectRecipeClick} title=\"Select Recipe\" color=\"#4ECCA3\" /> \r\n        </View>  \r\n        <View style={{flex: 1, flexDirection: 'column'}}>\r\n          <RecipeComp recipe={currentRecipe} />\r\n        </View>\r\n      </View>\r\n    </Fragment>\r\n  ) \r\n  : index === 1 ?   \r\n  <Fragment>\r\n    <View style={{flex: 1, flexDirection: 'row'}}>\r\n      <View style={{flex: 1, flexDirection: 'column'}}>\r\n        <RecipeComp recipe={currentRecipe} />\r\n      </View>\r\n      <View style={{flex: 1, flexDirection: 'column'}}>\r\n        <SurveyComp submitSurvey={selectRecipeClick}/>\r\n      </View>\r\n    </View>\r\n  </Fragment> : (<div></div>)) : (<div></div>);  \r\n  \r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}