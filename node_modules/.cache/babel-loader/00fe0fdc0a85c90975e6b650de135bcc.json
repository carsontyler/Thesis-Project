{"ast":null,"code":"import _slicedToArray from \"C:\\\\inetpub\\\\wwwroot\\\\Thesis-Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\inetpub\\\\wwwroot\\\\Thesis-Project\\\\src\\\\components\\\\RecipeRaterComp.tsx\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { View } from \"react-native\";\nimport { RecipeComp } from \"./RecipeComp\";\nimport _ from 'lodash';\nimport \"./../views/HomePage/homepage.css\";\n\nconst breakfast_recipes = require('./../../data/breakfast_recipes.json');\n\nconst dessert_recipes = require('./../../data/dessert_recipes.json');\n\nconst dinner_recipes = require('./../../data/dinner_recipes.json');\n\nconst gluten_free_recipes = require('./../../data/gluten_free_recipes.json');\n\nconst side_recipes = require('./../../data/side_recipes.json');\n\nexport const RecipeRaterComp = props => {\n  //const ingredients = props.recipe ? props.recipe.ingredients.substr(2, props.recipe.ingredients.length - 4).split(\"', '\") : null;\n  //const directions = props.recipe ? props.recipe.directions.substr(2, props.recipe.directions.length - 4).split(\"', '\") : null;\n  const varToString = varObj => Object.keys(varObj)[0];\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        childRecipes = _useState2[0],\n        setChildRecipes = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mainRecipes = _useState4[0],\n        setMainRecipes = _useState4[1];\n\n  let _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentRecipe = _useState6[0],\n      setCurrentRecipe = _useState6[1];\n\n  let _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      groupId = _useState8[0],\n      setGroupRecipe = _useState8[1];\n\n  let _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      index = _useState10[0],\n      setIndex = _useState10[1];\n\n  let _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      displayId = _useState12[0],\n      setDisplayId = _useState12[1];\n\n  const handleClick = rcp => {\n    setCurrentRecipe(rcp);\n  };\n\n  useEffect(() => {\n    setChildRecipes(dinner_recipes);\n\n    let mainRecipes = _.filter(dinner_recipes, recipe => {\n      return recipe.type === \"main\";\n    });\n\n    setGroupRecipe(varToString(dinner_recipes));\n    setMainRecipes(mainRecipes);\n    setCurrentRecipe(mainRecipes[0]); // let childIds = currentRecipe?.most_similar ?? [] as number[];\n    // setChildRecipes(_.filter(dinner_recipes, (recipe: Recipe) => {\n    //     return childIds.includes(recipe.id);\n    // }))\n  }, []);\n  return currentRecipe ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RecipeComp, {\n    recipe: currentRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }\n  });\n};","map":{"version":3,"sources":["C:/inetpub/wwwroot/Thesis-Project/src/components/RecipeRaterComp.tsx"],"names":["React","Fragment","useEffect","useState","View","RecipeComp","_","breakfast_recipes","require","dessert_recipes","dinner_recipes","gluten_free_recipes","side_recipes","RecipeRaterComp","props","varToString","varObj","Object","keys","childRecipes","setChildRecipes","mainRecipes","setMainRecipes","currentRecipe","setCurrentRecipe","groupId","setGroupRecipe","index","setIndex","displayId","setDisplayId","handleClick","rcp","filter","recipe","type","flex","flexDirection"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,QAA6B,cAA7B;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,kCAAP;;AAGA,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,qCAAD,CAAjC;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mCAAD,CAA/B;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,kCAAD,CAA9B;;AACA,MAAMG,mBAAmB,GAAGH,OAAO,CAAC,uCAAD,CAAnC;;AACA,MAAMI,YAAY,GAAGJ,OAAO,CAAC,gCAAD,CAA5B;;AAOA,OAAO,MAAMK,eAA+C,GAAIC,KAAD,IAAW;AACxE;AACA;AAEA,QAAMC,WAAW,GAAIC,MAAD,IAAgBC,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoB,CAApB,CAApC;;AAJwE,oBAKhCb,QAAQ,EALwB;AAAA;AAAA,QAKjEgB,YALiE;AAAA,QAKnDC,eALmD;;AAAA,qBAMlCjB,QAAQ,EAN0B;AAAA;AAAA,QAMjEkB,WANiE;AAAA,QAMpDC,cANoD;;AAAA,mBAOhCnB,QAAQ,EAPwB;AAAA;AAAA,MAOnEoB,aAPmE;AAAA,MAOpDC,gBAPoD;;AAAA,mBAQxCrB,QAAQ,CAAC,EAAD,CARgC;AAAA;AAAA,MAQnEsB,OARmE;AAAA,MAQ1DC,cAR0D;;AAAA,mBAShDvB,QAAQ,CAAC,CAAD,CATwC;AAAA;AAAA,MASnEwB,KATmE;AAAA,MAS5DC,QAT4D;;AAAA,oBAUxCzB,QAAQ,CAAC,CAAD,CAVgC;AAAA;AAAA,MAUnE0B,SAVmE;AAAA,MAUxDC,YAVwD;;AAWxE,QAAMC,WAAW,GAAIC,GAAD,IAAc;AAChCR,IAAAA,gBAAgB,CAACQ,GAAD,CAAhB;AACD,GAFD;;AAIA9B,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,eAAe,CAACV,cAAD,CAAf;;AACA,QAAIW,WAAW,GAAGf,CAAC,CAAC2B,MAAF,CAASvB,cAAT,EAA0BwB,MAAD,IAAoB;AAC3D,aAAOA,MAAM,CAACC,IAAP,KAAgB,MAAvB;AACH,KAFiB,CAAlB;;AAGAT,IAAAA,cAAc,CAACX,WAAW,CAACL,cAAD,CAAZ,CAAd;AACAY,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,IAAAA,gBAAgB,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAhB,CAPc,CAQd;AACA;AACA;AACA;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAOE,aAAa,gBAClB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACa,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,aAAa,EAAE;AAAzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACD,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,aAAa,EAAE;AAAzB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEd,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADkB,gBASf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATL;AAUD,CAvCM","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"\r\nimport { View, Button } from \"react-native\"\r\nimport {Card, CardHeader, CardTitle, CardBody, Col, CardImg, Row} from \"reactstrap\"\r\nimport { RecipeComp } from \"./RecipeComp\";\r\nimport _ from 'lodash'\r\nimport \"./../views/HomePage/homepage.css\"\r\nimport { Recipe } from \"../views/HomePage/HomePage\";\r\n\r\nconst breakfast_recipes = require('./../../data/breakfast_recipes.json')\r\nconst dessert_recipes = require('./../../data/dessert_recipes.json')\r\nconst dinner_recipes = require('./../../data/dinner_recipes.json')\r\nconst gluten_free_recipes = require('./../../data/gluten_free_recipes.json')\r\nconst side_recipes = require('./../../data/side_recipes.json') \r\n\r\ninterface RecipeRaterCompProps {\r\n    selectRecipeClick: any;\r\n    recipe: Recipe;\r\n}\r\n\r\nexport const RecipeRaterComp: React.FC<RecipeRaterCompProps> = (props) => {\r\n  //const ingredients = props.recipe ? props.recipe.ingredients.substr(2, props.recipe.ingredients.length - 4).split(\"', '\") : null;\r\n  //const directions = props.recipe ? props.recipe.directions.substr(2, props.recipe.directions.length - 4).split(\"', '\") : null;\r\n    \r\n  const varToString = (varObj: {}) => Object.keys(varObj)[0]\r\n  const [childRecipes, setChildRecipes] = useState<Recipe[]>();\r\n  const [mainRecipes, setMainRecipes] = useState<Recipe[]>();\r\n  let [currentRecipe, setCurrentRecipe] = useState<Recipe>();\r\n  let [groupId, setGroupRecipe] = useState(\"\");\r\n  let [index, setIndex] = useState(0);\r\n  let [displayId, setDisplayId] = useState(0);\r\n  const handleClick = (rcp: any) => {\r\n    setCurrentRecipe(rcp);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setChildRecipes(dinner_recipes);\r\n    let mainRecipes = _.filter(dinner_recipes, (recipe: Recipe) => {\r\n        return recipe.type === \"main\";\r\n    });\r\n    setGroupRecipe(varToString(dinner_recipes));\r\n    setMainRecipes(mainRecipes);\r\n    setCurrentRecipe(mainRecipes[0]);\r\n    // let childIds = currentRecipe?.most_similar ?? [] as number[];\r\n    // setChildRecipes(_.filter(dinner_recipes, (recipe: Recipe) => {\r\n    //     return childIds.includes(recipe.id);\r\n    // }))\r\n  }, []);\r\n  \r\n  return currentRecipe ? (\r\n    <Fragment>\r\n      <View style={{flex: 1, flexDirection: 'row'}}>\r\n        <View style={{flex: 1, flexDirection: 'column'}}>\r\n          <RecipeComp recipe={currentRecipe} />\r\n        </View>\r\n        \r\n      </View>\r\n    </Fragment>\r\n  ) : (<div></div>);   \r\n}"]},"metadata":{},"sourceType":"module"}