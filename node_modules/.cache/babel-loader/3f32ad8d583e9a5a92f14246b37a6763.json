{"ast":null,"code":"var _jsxFileName = \"C:\\\\inetpub\\\\wwwroot\\\\Thesis-Project\\\\src\\\\components\\\\DisclosureAndDirectionsComp.tsx\";\nimport React, { useEffect } from \"react\";\nimport { View, Button } from \"react-native\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nexport const DisclosureAndDirectionsComp = props => {\n  useEffect(() => {\n    props.refresh();\n  }, [props.directionsAccepted]);\n  return /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    tag: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"tim-icons icon-bell-55 text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }), \" Directions and Disclosure\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Thank you for participating in Carson's Thesis Project Study!\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), \"Please only continue if you have returned your Informed Consent form.\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Directions\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"In this experiment, you will be selecting recipes based on a given scenario and then rating recommendations based on your selection. You can select recipes by clicking on them.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), \"Five (5) scenarios will be presented. You should select the recipe you think is the best. There is no right answer, simply pick the one you think looks the best, would be the most delicious, is the easiest to cook - whatever.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), \"Upon selecting a recipe, you will be presented with ten (10) recommended recipes. You can cycle through the recipes by clicking on them.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), \"You will then fill out a survey related to the recommended recipes and the recommendation system as a whole. You will rate these from 1-5 by clicking on the stars.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), \"If you encounter any issues in this study, please contact Carson at 385.244.6611.\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"directionsCheckbox\",\n    type: \"checkbox\",\n    onChange: props.directionsCheckboxChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }), \"I understand these directions and have returned the Informed Consent form\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\",\n      marginTop: \"1em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onPress: props.handleSubmit,\n    title: \"Submit\",\n    color: \"#4ECCA3\",\n    disabled: !props.directionsAccepted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 5,\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }))))))));\n};","map":{"version":3,"sources":["C:/inetpub/wwwroot/Thesis-Project/src/components/DisclosureAndDirectionsComp.tsx"],"names":["React","useEffect","View","Button","Card","CardHeader","CardTitle","CardBody","DisclosureAndDirectionsComp","props","refresh","directionsAccepted","flex","flexDirection","directionsCheckboxChange","marginTop","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { View, Button } from \"react-native\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Col,\r\n  CardImg,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\ninterface DisclosureAndDirectionsProps {\r\n  directionsCheckboxChange: any;\r\n  handleSubmit: any;\r\n  directionsAccepted: boolean;\r\n  refresh: any;\r\n}\r\n\r\nexport const DisclosureAndDirectionsComp: React.FC<DisclosureAndDirectionsProps> = (\r\n  props\r\n) => {\r\n  useEffect(() => {\r\n    props.refresh();\r\n  }, [props.directionsAccepted]);\r\n\r\n  return (\r\n    <View>\r\n      <View style={{ flex: 1, flexDirection: \"row\" }}>\r\n        <Card className=\"card-chart\">\r\n          <CardHeader>\r\n            <CardTitle tag=\"h1\">\r\n              <i className=\"tim-icons icon-bell-55 text-info\" /> Directions and\r\n              Disclosure\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <View>\r\n              <p>\r\n                Thank you for participating in Carson's Thesis Project\r\n                Study!\r\n                <br />\r\n                Please only continue if you have returned your Informed Consent form. \r\n              </p>\r\n              <h2>Directions</h2>\r\n              <p>\r\n                In this experiment, you will be selecting recipes based on a\r\n                given scenario and then rating recommendations based on your\r\n                selection. You can select recipes by clicking on them.\r\n                <br />\r\n                <br />\r\n                Five (5) scenarios will be presented. You should select the\r\n                recipe you think is the best. There is no right answer, simply\r\n                pick the one you think looks the best, would be the most\r\n                delicious, is the easiest to cook - whatever.\r\n                <br />\r\n                <br />\r\n                Upon selecting a recipe, you will be presented with ten (10)\r\n                recommended recipes. You can cycle through the recipes by\r\n                clicking on them.\r\n                <br />\r\n                <br />\r\n                You will then fill out a survey related to the recommended\r\n                recipes and the recommendation system as a whole. You will rate\r\n                these from 1-5 by clicking on the stars.\r\n                <br />\r\n                If you encounter any issues in this study, please contact Carson at 385.244.6611.\r\n              </p>\r\n              <form>\r\n                <label>\r\n                  <input\r\n                    name=\"directionsCheckbox\"\r\n                    type=\"checkbox\"\r\n                    onChange={props.directionsCheckboxChange}\r\n                  />\r\n                  I understand these directions and have returned the Informed Consent form\r\n                  <br />\r\n                </label>\r\n                <View style={{ flex: 1, flexDirection: \"row\", marginTop: \"1em\" }}>\r\n                  <View style={{ flex: 1, flexDirection: \"column\" }}>\r\n                    <Button\r\n                      onPress={props.handleSubmit}\r\n                      title=\"Submit\"\r\n                      color=\"#4ECCA3\"\r\n                      disabled={!props.directionsAccepted}\r\n                    />\r\n                  </View>\r\n                  <View style={{ flex: 5, flexDirection: \"column\" }} />\r\n                </View>\r\n              </form>\r\n            </View>\r\n          </CardBody>\r\n        </Card>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}